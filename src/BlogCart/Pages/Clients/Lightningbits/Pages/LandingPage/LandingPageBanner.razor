
<div x-data="{showMenu: false}" class="h-24 z-40 relative container mx-auto px-6 flex items-center justify-between text-white">
</div>

<div x-data="slideshowPort()" x-init="init()" class="-mt-32 relative w-full h-screen flex items-center justify-center">
    <div class="relative z-10 text-center text-white px-4 sm:px-6 md:px-8">
        @if (showTitle)
        {
            <h1 class="text-4xl sm:text-5xl md:text-6xl font-display font-semibold mt-2 animate__animated animate__slideInRight duration-500">
                LightningBits.com
            </h1>
        }
        <div class="mx-auto grid grid-cols-1 md:grid-cols-2 gap-4 mt-6 px-4 sm:px-0">
            @if (showContent)
            {
                <a href="/lightningbits/products/product-services" class="inline-block bg-indigo-500 text-white text-sm tracking-widest font-heading px-6 py-3 sm:px-8 sm:py-4" aria-label="Shop now">Shop now</a>
                <a href="/lightningbits/Blog" class="inline-block bg-gray-100 text-indigo-500 text-sm tracking-widest font-heading px-6 py-3 sm:px-8 sm:py-4" aria-label="My Blog">My Blog</a>
            }
        </div>
        <p class="mt-10 text-lg sm:text-xl">Software as a Service</p>
    </div>
    <img x-bind:src="images[current]" alt="LightningBits.com image" class="w-full h-full absolute inset-0 object-cover opacity-95">
</div>


@code {
    private bool showContent = false;
    private bool showTitle = false;
    private bool hasInitialized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !hasInitialized)
        {
            await Task.Delay(1000);
            showContent = true;
            showTitle = true;
            hasInitialized = true;
            StateHasChanged();
        }
    }

    public void Dispose()
    {
        hasInitialized = false;
    }

}

