@inherits LayoutComponentBase
@namespace BlogCart.Shared.MainLayouts
@inject IClientFrontendService ClientFrontendService
@inject IHttpContextAccessor HttpContextAccessor



<MudThemeProvider Theme="MyTheme" @bind-IsDarkMode="@_isDarkMode" @ref="@_mudThemeProvider" />
<MudDialogProvider />
<MudSnackbarProvider />


<MudLayout Color="Color.Dark">
    <LightningBitsAppBar OnSidebarToggled="ToggleSidebar" />
    <LightningBitsNavMenu SideBarOpen="_sidebarOpen" />
    <MudScrollToTop>
        <MudFab Color="Color.Primary" Icon="@Icons.Filled.ArrowCircleUp" />
    </MudScrollToTop>
    <MudMainContent>
        <CascadingValue Value="ClientId">
            @Body
        </CascadingValue>
    </MudMainContent>

</MudLayout>


@code {
    private int ClientId { get; set; } = 0;
    private bool _sidebarOpen = false;
    private void ToggleSidebar() => _sidebarOpen = !_sidebarOpen;
    private bool _isDarkMode;
    private MudThemeProvider _mudThemeProvider;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT") == "Development")
        {
            if (firstRender)
            {
                ClientId = 3; //dev testing client, Also need to set layout in service folder DomianlayoutService to Match
                _isDarkMode = await _mudThemeProvider.GetSystemPreference();
                StateHasChanged();
            }
        }
        else
        {
            if (firstRender)
            {
                var domain = HttpContextAccessor.HttpContext.Request.Host.Value.ToLower();
                ClientId = await ClientFrontendService.GetClientIdFromDomain(domain);

                _isDarkMode = await _mudThemeProvider.GetSystemPreference();
                StateHasChanged();
            }
        }
    }


    private MudTheme MyTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Primary = "#594ae2ff",
            Secondary = "#ff4081ff",
            Dark = "#616161ff",
            Black = "#000000",
            White = "#ffffffff",
            Surface = "#ffffffff",
            TextPrimary = "#000000",
            TextSecondary = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#ffffffff",
            AppbarText = "#000000",
            DrawerBackground = "#ffffffff",
            DrawerText = "#000000",
            DrawerIcon = "#000000"
        },
        PaletteDark = new PaletteDark()
        {
            Primary = "#594ae2ff",
            Secondary = "#ff4081ff",
            Black = "#000000",
            White = "#ffffffff",
            Surface = "#373740",
            TextPrimary = "#ffffffb3",
            TextSecondary = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#27272f",
            AppbarText = "#FAFAFA",
            DrawerBackground = "#27272f",
            DrawerText = "#ffffffb3",
            DrawerIcon = "#ffffffb3"
        },

    };
}