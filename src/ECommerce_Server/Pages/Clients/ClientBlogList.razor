@*@page "/clientblogs/{id:int}"*@
@page "/clientblogs"
@inject IBlogRepository _blogRepository
@inject IClientRepository _clientRepository
@attribute [Authorize(Roles = SD.Role_Admin)]

<div class="container-fluid p-20">
    <div class="row">
        <div class="col-md-3">
            <h3>Clients</h3>
            <ul>
                @foreach (var c in clients)
                {
                    <li><a @onclick="() => SetClient(c)">@c.DomainName</a></li>
                }
            </ul>
        </div>
        <div class="col-md-9">
            <h3>Blogs</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Author</th>
                        <th>Blog Category</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var b in blogs)
                    {
                        <tr>
                            <td>@b.Name</td>
                            <td>@b.Description</td>
                            <td>@b.Author</td>
                            <td>@b.BlogCategory.Name</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    private List<ClientDTO> clients = new List<ClientDTO>();
    private List<BlogDTO> blogs = new List<BlogDTO>();

    protected override async Task OnInitializedAsync()
    {
        clients = (await _clientRepository.GetAll()).ToList();
        blogs = (await _blogRepository.GetAll()).ToList();
    }

    private void SetClient(ClientDTO c)
    {
        blogs = blogs.Where(b => b.ClientId == c.ClientId).ToList();
    }
}
