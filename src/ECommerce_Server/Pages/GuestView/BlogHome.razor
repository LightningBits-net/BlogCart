@page "/BlogHome"


@inject IBlogRepository _blogRepository
@inject NavigationManager _navigationManager
@inject MudBlazor.ISnackbar snackBar

@*<PageTitle>@Title</PageTitle>
<HeadContent>
    <meta name="description" content="@Description" />
    <meta property="og:title" content="@Title" />
    <meta property="og:description" content="@Description" />
    <meta property="og:image" content="@ImageUrl" />
    <meta name="twitter:title" content="@Title" />
    <meta name="twitter:description" content="@Description" />
    <meta name="twitter:image" content="@ImageUrl" />
    <meta property="og:type" content="article" />
    <meta property="og:url" content="@(_navigationManager.Uri)" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="@(_navigationManager.Uri)" />
</HeadContent>*@


@if (IsProcessing)
{
    <div class="text-center">
        <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
    </div>
}
else
{
        <div class="w-full md:pr-12 mb-12">
            <!-- categories -->
            <ul class="flex justify-center pb-6 pl-6 pr-6">
                <li>
                    <a class="inline-block py-2 px-4 text-center no-underline hover:underline font-semibold" href="@(_navigationManager.Uri)">Home</a>
                </li>
                    @foreach (var category in Blogs.Select(u => u.BlogCategory.Name).Distinct())
                    {
                        <li>
                            <a class="inline-block py-2 px-4 text-center no-underline hover:underline font-semibold" @onclick="() => OnCategorySelectionChange(category)">@category</a>
                        </li>
                    }
            </ul>
            <!-- articles -->
            @foreach (var blog in GetFilteredBlogs())
            {
                <article class="mb-12 border-b">
                    <h2 class="mb-4">
                        <a href="/Blog/Page/@blog.Id" class="text-xl md:text-2xl no-underline hover:underline">
                            @((MarkupString)blog.Name)
                        </a>
                    </h2>
                    <div class="mb-4 text-sm">
                        by <a href="/Blog/Home">@((MarkupString)blog.Author)</a> @blog.DateCreated.ToLocalTime().ToString("MM/dd/yyyy")
                        <span class="font-bold mx-1"> | </span>
                        <a href="/Blog/Home">2 Comments</a>
                    </div>
                    <p class="leading-normal mb-4">
                        @((MarkupString)blog.Description)
                    </p>
                </article>
            }
        </div>
    }

@code {
    public bool IsProcessing { get; set; } = false;
    public IEnumerable<BlogDTO> Blogs { get; set; } = new List<BlogDTO>();

    private string Title = "LightningBits.com";
    private string Description =
        "Explore the power of C# and .NET Blazor in this in-depth blog post. " +
        "Learn how to build web applications with Blazor and take advantage of its powerful features.";
    private string ImageUrl = "/img/Matrixlaptop.png";
    private string selectedCategory = "SelectedCategory";

    protected override async Task OnInitializedAsync()
    {
        IsProcessing = true;
        Blogs = await _blogRepository.GetAll();
        IsProcessing = false;
    }

    private IEnumerable<BlogDTO> GetFilteredBlogs()
    {
        if (selectedCategory == "SelectedCategory")
        {
            return Blogs.Where(u => u.BlogFavorite).OrderByDescending(b => b.DateCreated).Take(5);
        }
        else
        {
            return Blogs.Where(u => u.BlogCategory.Name == selectedCategory).OrderByDescending(b => b.DateCreated).Take(5);
        }
    }

    private void OnCategorySelectionChange(string category)
    {
        selectedCategory = category;
    }
}
