<AuthorizeView Roles="@($"{roleAdmin},{roleClient}")">
    <Authorized>
        <MudAppBar Elevation="21" Dense="true">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Primary" Edge="Edge.Start"
                           OnClick="async () => await OnSidebarToggled.InvokeAsync()" />
            <MudSpacer />
            <MudButton Href="Identity/Account/Logout" StartIcon="@Icons.Filled.Logout" Variant="Variant.Filled" Size="Size.Small" Color="Color.Inherit">Log-out</MudButton>
        </MudAppBar>
    </Authorized>
    <NotAuthorized>
        <MudAppBar Elevation="21" Dense="true">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Primary" Edge="Edge.Start"
                           OnClick="async () => await OnSidebarToggled.InvokeAsync()" />
            <MudSpacer />
            <MudButton Href="Identity/Account/Login" StartIcon="@Icons.Filled.Login" Variant="Variant.Filled" Size="Size.Small" Color="Color.Inherit">Log-in</MudButton>
        </MudAppBar>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public EventCallback OnSidebarToggled { get; set; }
    private string roleAdmin = SharedServices.Commons.SD.Role_Admin;
    private string roleClient = SharedServices.Commons.SD.Role_Client;
}