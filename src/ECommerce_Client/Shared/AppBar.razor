@using ViewModels
@inject ISyncLocalStorageService _localStorage
@inject ICartService _cartService
@implements IDisposable

<AuthorizeView>
    <Authorized>
        <MudAppBar Elevation="21" Dense="true">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Primary" Size="Size.Medium" Edge="Edge.End"
                           OnClick="async () => await OnSidebarToggled.InvokeAsync()" />
            <MudIconButton Href="/" Icon="@Icons.Material.Filled.Home" Color="Color.Inherit" Size="Size.Medium" />
            <MudSpacer />
            @if (GetCartCount() < 1)
            {
                <MudIconButton Href="https://github.com/LightningBit/E-Commerce" Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Size="Size.Medium" Edge="Edge.Start" />

            }
            else
            {
                <MudText>( @GetCartCount() )</MudText>
                <MudIconButton Href="/cart" Icon="@Icons.Material.Filled.ShoppingCart" Color="Color.Inherit" Size="Size.Medium" Edge="Edge.False" />
                <MudIconButton Href="https://github.com/LightningBit/E-Commerce" Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Size="Size.Medium" Edge="Edge.Start" />
            }
            @*<MudIconButton Href="#" Icon="@Icons.Custom.Brands.Facebook" Color="Color.Inherit" Size="Size.Medium" Edge="Edge.Start" />
                <MudIconButton Href="#" Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Size="Size.Medium" Edge="Edge.Start" />
                <MudIconButton Href="#" Icon="@Icons.Custom.Brands.Instagram" Color="Color.Inherit" Size="Size.Medium" Edge="Edge.Start" />
                <MudIconButton Href="#" Icon="@Icons.Custom.Brands.Twitter" Color="Color.Inherit" Size="Size.Medium" Edge="Edge.Start" />*@
        </MudAppBar>
    </Authorized>
    <NotAuthorized>
        <MudAppBar Elevation="21" Dense="true">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Primary" Size="Size.Medium" Edge="Edge.End"
                           OnClick="async () => await OnSidebarToggled.InvokeAsync()" />
            <MudIconButton Href="/" Icon="@Icons.Material.Filled.Home" Color="Color.Inherit" Size="Size.Medium" />
            <MudSpacer />
            @if (GetCartCount() < 1)
            {
                <MudIconButton Href="https://github.com/LightningBit/E-Commerce" Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Size="Size.Medium" Edge="Edge.Start" />

            }
            else
            {
                <MudText>( @GetCartCount() )</MudText>
                <MudIconButton Href="/cart" Icon="@Icons.Material.Filled.ShoppingCart" Color="Color.Inherit" Size="Size.Medium" Edge="Edge.False" />
                <MudIconButton Href="https://github.com/LightningBit/E-Commerce" Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Size="Size.Medium" Edge="Edge.Start" />
            }            @*<MudIconButton Href="#" Icon="@Icons.Custom.Brands.Facebook" Color="Color.Inherit" Size="Size.Medium" Edge="Edge.Start" />
                <MudIconButton Href="#" Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Size="Size.Medium" Edge="Edge.Start" />
                <MudIconButton Href="#" Icon="@Icons.Custom.Brands.Instagram" Color="Color.Inherit" Size="Size.Medium" Edge="Edge.Start" />
                <MudIconButton Href="#" Icon="@Icons.Custom.Brands.Twitter" Color="Color.Inherit" Size="Size.Medium" Edge="Edge.Start" />*@
        </MudAppBar>
    </NotAuthorized>
</AuthorizeView>



@code {
    [Parameter]
    public EventCallback OnSidebarToggled { get; set; }
    protected override void OnInitialized()
    {
        _cartService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        _cartService.OnChange -= StateHasChanged;
    }

    private int GetCartCount()
    {
        var cart = _localStorage.GetItem<List<ShoppingCart>>(SD.ShoppingCart);
        return cart == null ? 0 : cart.Count;
    }
}