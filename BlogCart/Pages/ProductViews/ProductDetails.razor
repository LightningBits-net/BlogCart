@page "/productdetails/{ProductId:int}"
@inject IProductService _productService
@inject ICartService _cartService
@inject NavigationManager _navigationManager
@inject MudBlazor.ISnackbar snackBar
@using BlogCart.ViewModels


@if (IsProcessing)
{
    <div class="text-center">
        <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
    </div>
}
else
{
    <div class="container mx-auto flex justify-center pb-20 pt-10">
            <div class="w-full md:w-1/2 lg:w-1/2 px-1 mb-12">
                <MudCard Elevation="25">
                    <MudCardActions>
                        <MudText Typo="Typo.h5" Color="Color.Default">@Product.Name</MudText>
                        <MudSpacer />
                        @if (Product.Color != "*")
                        {
                            <MudText Typo="Typo.body2" Color="Color.Default"> Color:@Product.Color</MudText>
                        }
                    </MudCardActions>
                    <img src="@Product.ImageUrl" class="w-full h-64 object-cover" />
                    <MudCardContent>
                        <p class="h-48 min-h-0">
                            <MudText Typo="Typo.body1" Color="Color.Inherit"> @((MarkupString)Product.Description)</MudText>
                        </p>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButtonGroup>
                            @foreach (var productPrice in Product.ECommerceProductPrices)
                            {
                                if (productPrice.Id == DetailsVM.SelectedProductPriceId)
                                {
                                    <MudButton Color="Color.Dark" Width="128px" Height="64px" Style="margin: 5px; padding: 5px;; border: 3px solid #28A745; border-radius: 5px; box-shadow: 5px">
                                        <p> &nbsp @productPrice.MyProperty &nbsp</p>
                                        <p> &nbsp @productPrice.Price.ToString("c") &nbsp</p>
                                        <p> &nbsp @productPrice.Size &nbsp</p>
                                    </MudButton>
                                }
                                else
                                {
                                    <MudButton OnClick="(args)=>SelectedProductPrice(args,productPrice.Id)" Color="Color.Info" Width="128px" Height="64px" Style="margin: 5px; padding: 5px; border: 1px solid; border-radius: 20px; box-shadow: 5px">
                                        <p> &nbsp @productPrice.MyProperty &nbsp</p>
                                        <p> &nbsp @productPrice.Price.ToString("c") &nbsp</p>
                                        <p> &nbsp @productPrice.Size &nbsp </p>
                                    </MudButton>
                                }
                            }
                        </MudButtonGroup>
                    </MudCardActions>
                    @if (DetailsVM.SelectedProductPriceId > 0)
                    {
                        <MudButton Class="w-full" OnClick="AddToCart" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success">Add to Cart</MudButton>
                    }
                </MudCard>
            </div>
        </div>
        }


@code {
        [Parameter]
        public int ProductId { get; set; }

        public ProductDTO Product { get; set; } = new();
        public bool IsProcessing { get; set; } = false;
        public DetailsVM DetailsVM { get; set; } = new();

        protected override async Task OnInitializedAsync()
        {
            IsProcessing = true;
            Product = await _productService.Get(ProductId);
            IsProcessing = false;
        }

        private async Task SelectedProductPrice(MouseEventArgs e, int productPriceId)
        {
            DetailsVM.ProductPrice = Product.ECommerceProductPrices.FirstOrDefault(u => u.Id == productPriceId);
            DetailsVM.SelectedProductPriceId = productPriceId;
        }

        private async Task AddToCart()
        {
            ShoppingCart shoppingCart = new()
            {
                Count = DetailsVM.Count,
                ProductId = ProductId,
                ProductPriceId = DetailsVM.SelectedProductPriceId
            };

            await _cartService.IncrementCart(shoppingCart);
            _navigationManager.NavigateTo("/cart");
            snackBar.Add("Product added to cart Succesfully.", Severity.Success);
        }
    }

